######################### APM Server Configuration #########################

################################ APM Server ################################

  apm-server:
    # Defines the host and port the server is listening on. Use "unix:/path/to.sock" to listen on a unix domain socket.
    host: "0.0.0.0:8200"
    
  #================================= Template =================================
  
  # A template is used to set the mapping in Elasticsearch.
  # By default template loading is enabled and the template is loaded.
  # These settings can be adjusted to load your own template or overwrite existing ones.
  
  # Set to false to disable template loading.
  #setup.template.enabled: true
  
  # Template name. By default the template name is "apm-%{[observer.version]}"
  # The template name and pattern has to be set in case the elasticsearch index pattern is modified.
  #setup.template.name: "apm-%{[observer.version]}"
  
  # Template pattern. By default the template pattern is "apm-%{[observer.version]}-*" to apply to the default index settings.
  # The first part is the version of apm-server and then -* is used to match all daily indices.
  # The template name and pattern has to be set in case the elasticsearch index pattern is modified.
  #setup.template.pattern: "apm-%{[observer.version]}-*"
  
  # Path to fields.yml file to generate the template.
  #setup.template.fields: "${path.config}/fields.yml"
  
  # Overwrite existing template.
  #setup.template.overwrite: false
  
  # Elasticsearch template settings.
  setup.template.settings:
  
    # A dictionary of settings to place into the settings.index dictionary
    # of the Elasticsearch template. For more details, please check
    # https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping.html
    index:
      number_of_replicas: 0
      #number_of_shards: 1
      #codec: best_compression
      #number_of_routing_shards: 30
      #mapping.total_fields.limit: 2000
  
  #============================= Elastic Cloud =============================
  
  # These settings simplify using APM Server with the Elastic Cloud (https://cloud.elastic.co/).
  
  # The cloud.id setting overwrites the `output.elasticsearch.hosts` option.
  # You can find the `cloud.id` in the Elastic Cloud web UI.
  #cloud.id:
  
  # The cloud.auth setting overwrites the `output.elasticsearch.username` and
  # `output.elasticsearch.password` settings. The format is `<user>:<pass>`.
  #cloud.auth:
  
  #================================ Outputs =================================
  
  # Configure the output to use when sending the data collected by apm-server.
  
  #-------------------------- Elasticsearch output --------------------------
  output.elasticsearch:
    # Array of hosts to connect to.
    # Scheme and port can be left out and will be set to the default (`http` and `9200`).
    # In case you specify and additional path, the scheme is required: `http://localhost:9200/path`.
    # IPv6 addresses should always be defined as: `https://[2001:db8::1]:9200`.
    hosts: ["${ES_NODE:elastic}"]
  
    # Boolean flag to enable or disable the output module.
    #enabled: true
  
    # Set gzip compression level.
    #compression_level: 0
  
    # Protocol - either `http` (default) or `https`.
    #protocol: "https"
  
    # Authentication credentials - either API key or username/password.
    #api_key: "id:api_key"
    #username: "elastic"
    #password: "changeme"
  
    # Dictionary of HTTP parameters to pass within the url with index operations.
    #parameters:
      #param1: value1
      #param2: value2
  
    # Number of workers per Elasticsearch host.
    #worker: 1
  
    # By using the configuration below, APM documents are stored to separate indices,
    # depending on their `processor.event`:
    # - error
    # - transaction
    # - span
    # - sourcemap
    #
    # The indices are all prefixed with `apm-%{[observer.version]}`.
    # To allow managing indices based on their age, all indices (except for sourcemaps)
    # end with the information of the day they got indexed.
    # e.g. "apm-7.3.0-transaction-2019.07.20"
    #
    # Be aware that you can only specify one Elasticsearch template.
    # If you modify the index patterns you must also update these configurations accordingly,
    # as they need to be aligned:
    # * `setup.template.name`
    # * `setup.template.pattern`
    #index: "apm-%{[observer.version]}-%{+yyyy.MM.dd}"
    #indices:
    #  - index: "apm-%{[observer.version]}-sourcemap"
    #    when.contains:
    #      processor.event: "sourcemap"
    #
    #  - index: "apm-%{[observer.version]}-error-%{+yyyy.MM.dd}"
    #    when.contains:
    #      processor.event: "error"
    #
    #  - index: "apm-%{[observer.version]}-transaction-%{+yyyy.MM.dd}"
    #    when.contains:
    #      processor.event: "transaction"
    #
    #  - index: "apm-%{[observer.version]}-span-%{+yyyy.MM.dd}"
    #    when.contains:
    #      processor.event: "span"
    #
    #  - index: "apm-%{[observer.version]}-metric-%{+yyyy.MM.dd}"
    #    when.contains:
    #      processor.event: "metric"
    #
    #  - index: "apm-%{[observer.version]}-onboarding-%{+yyyy.MM.dd}"
    #    when.contains:
    #      processor.event: "onboarding"
  
    # A pipeline is a definition of processors applied to documents when ingesting them to Elasticsearch.
    # APM Server comes with a default pipeline definition, located at `ingest/pipeline/definition.json`, which is
    # loaded to Elasticsearch by default (see `apm-server.register.ingest.pipeline`).
    # APM pipeline is enabled by default. To disable it, set `pipeline: _none`.
    #pipeline: "apm"
  
    # Optional HTTP Path.
    #path: "/elasticsearch"
  
    # Custom HTTP headers to add to each request.
    #headers:
    #  X-My-Header: Contents of the header
  
    # Proxy server url.
    #proxy_url: http://proxy:3128
  
    # The number of times a particular Elasticsearch index operation is attempted. If
    # the indexing operation doesn't succeed after this many retries, the events are
    # dropped. The default is 3.
    #max_retries: 3
  
    # The maximum number of events to bulk in a single Elasticsearch bulk API index request.
    # The default is 50.
    #bulk_max_size: 50
  
    # The number of seconds to wait before trying to reconnect to Elasticsearch
    # after a network error. After waiting backoff.init seconds, apm-server
    # tries to reconnect. If the attempt fails, the backoff timer is increased
    # exponentially up to backoff.max. After a successful connection, the backoff
    # timer is reset. The default is 1s.
    #backoff.init: 1s
  
    # The maximum number of seconds to wait before attempting to connect to
    # Elasticsearch after a network error. The default is 60s.
    #backoff.max: 60s
  
    # Configure http request timeout before failing an request to Elasticsearch.
    #timeout: 90
  
    # Enable custom SSL settings. Set to false to ignore custom SSL settings for secure communication.
    #ssl.enabled: true
  
    # Optional SSL configuration options. SSL is off by default, change the `protocol` option if you want to enable `https`.
    # Configure SSL verification mode. If `none` is configured, all server hosts
    # and certificates will be accepted. In this mode, SSL based connections are
    # susceptible to man-in-the-middle attacks. Use only for testing. Default is
    # `full`.
    #ssl.verification_mode: full
  
    # List of supported/valid TLS versions. By default all TLS versions 1.0 up to
    # 1.2 are enabled.
    #ssl.supported_protocols: [TLSv1.0, TLSv1.1, TLSv1.2]
  
    # List of root certificates for HTTPS server verifications.
    #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]
  
    # Certificate for SSL client authentication.
    #ssl.certificate: "/etc/pki/client/cert.pem"
  
    # Client Certificate Key
    #ssl.key: "/etc/pki/client/cert.key"
  
    # Optional passphrase for decrypting the Certificate Key.
    # It is recommended to use the provided keystore instead of entering the passphrase in plain text.
    #ssl.key_passphrase: ''
  
    # Configure cipher suites to be used for SSL connections.
    #ssl.cipher_suites: []
  
    # Configure curve types for ECDHE based cipher suites.
    #ssl.curve_types: []
  
    # Configure what types of renegotiation are supported. Valid options are
    # never, once, and freely. Default is never.
    #ssl.renegotiation: never
  
  #----------------------------- Console output -----------------------------
  #output.console:
    # Boolean flag to enable or disable the output module.
    #enabled: false
  
    # Configure JSON encoding.
    #codec.json:
      # Pretty-print JSON event.
      #pretty: false
  
      # Configure escaping HTML symbols in strings.
      #escape_html: false
  
  #---------------------------- Logstash output -----------------------------
  #output.logstash:
    # Boolean flag to enable or disable the output module.
    #enabled: false
  
    # The Logstash hosts.
    #hosts: ["localhost:5044"]
  
    # Number of workers per Logstash host.
    #worker: 1
  
    # Set gzip compression level.
    #compression_level: 3
  
    # Configure escaping html symbols in strings.
    #escape_html: true
  
    # Optional maximum time to live for a connection to Logstash, after which the
    # connection will be re-established.  A value of `0s` (the default) will
    # disable this feature.
    #
    # Not yet supported for async connections (i.e. with the "pipelining" option set).
    #ttl: 30s
  
    # Optional load balance the events between the Logstash hosts. Default is false.
    #loadbalance: false
  
    # Number of batches to be sent asynchronously to Logstash while processing
    # new batches.
    #pipelining: 2
  
    # If enabled only a subset of events in a batch of events is transferred per
    # group.  The number of events to be sent increases up to `bulk_max_size`
    # if no error is encountered.
    #slow_start: false
  
    # The number of seconds to wait before trying to reconnect to Logstash
    # after a network error. After waiting backoff.init seconds, apm-server
    # tries to reconnect. If the attempt fails, the backoff timer is increased
    # exponentially up to backoff.max. After a successful connection, the backoff
    # timer is reset. The default is 1s.
    #backoff.init: 1s
  
    # The maximum number of seconds to wait before attempting to connect to
    # Logstash after a network error. The default is 60s.
    #backoff.max: 60s
  
    # Optional index name. The default index name is set to apm
    # in all lowercase.
    #index: 'apm'
  
    # SOCKS5 proxy server URL
    #proxy_url: socks5://user:password@socks5-server:2233
  
    # Resolve names locally when using a proxy server. Defaults to false.
    #proxy_use_local_resolver: false
  
    # Enable SSL support. SSL is automatically enabled if any SSL setting is set.
    #ssl.enabled: false
  
    # Optional SSL configuration options. SSL is off by default.
    # Configure SSL verification mode. If `none` is configured, all server hosts
    # and certificates will be accepted. In this mode, SSL based connections are
    # susceptible to man-in-the-middle attacks. Use only for testing. Default is
    # `full`.
    #ssl.verification_mode: full
  
    # List of supported/valid TLS versions. By default all TLS versions 1.0 up to
    # 1.2 are enabled.
    #ssl.supported_protocols: [TLSv1.0, TLSv1.1, TLSv1.2]
  
    # List of root certificates for HTTPS server verifications.
    #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]
  
    # Certificate for SSL client authentication.
    #ssl.certificate: "/etc/pki/client/cert.pem"
  
    # Client Certificate Key
    #ssl.key: "/etc/pki/client/cert.key"
  
    # Optional passphrase for decrypting the Certificate Key.
    # It is recommended to use the provided keystore instead of entering the passphrase in plain text.
    #ssl.key_passphrase: ''
  
    # Configure cipher suites to be used for SSL connections.
    #ssl.cipher_suites: []
  
    # Configure curve types for ECDHE based cipher suites.
    #ssl.curve_types: []
  
    # Configure what types of renegotiation are supported. Valid options are
    # never, once, and freely. Default is never.
    #ssl.renegotiation: never
  
  #------------------------------ Kafka output ------------------------------
  #output.kafka:
    # Boolean flag to enable or disable the output module.
    #enabled: false
  
    # The list of Kafka broker addresses from where to fetch the cluster metadata.
    # The cluster metadata contain the actual Kafka brokers events are published
    # to.
    #hosts: ["localhost:9092"]
  
    # The Kafka topic used for produced events. The setting can be a format string
    # using any event field. To set the topic from document type use `%{[type]}`.
    #topic: beats
  
    # The Kafka event key setting. Use format string to create unique event key.
    # By default no event key will be generated.
    #key: ''
  
    # The Kafka event partitioning strategy. Default hashing strategy is `hash`
    # using the `output.kafka.key` setting or randomly distributes events if
    # `output.kafka.key` is not configured.
    #partition.hash:
      # If enabled, events will only be published to partitions with reachable
      # leaders. Default is false.
      #reachable_only: false
  
      # Configure alternative event field names used to compute the hash value.
      # If empty `output.kafka.key` setting will be used.
      # Default value is empty list.
      #hash: []
  
    # Authentication details. Password is required if username is set.
    #username: ''
    #password: ''
  
    # Kafka version libbeat is assumed to run against. Defaults to the "1.0.0".
    #version: '1.0.0'
  
    # Configure JSON encoding.
    #codec.json:
      # Pretty print json event
      #pretty: false
  
      # Configure escaping html symbols in strings.
      #escape_html: true
  
    # Metadata update configuration. Metadata do contain leader information
    # deciding which broker to use when publishing.
    #metadata:
      # Max metadata request retry attempts when cluster is in middle of leader
      # election. Defaults to 3 retries.
      #retry.max: 3
  
      # Waiting time between retries during leader elections. Default is 250ms.
      #retry.backoff: 250ms
  
      # Refresh metadata interval. Defaults to every 10 minutes.
      #refresh_frequency: 10m
  
    # The number of concurrent load-balanced Kafka output workers.
    #worker: 1
  
    # The number of times to retry publishing an event after a publishing failure.
    # After the specified number of retries, the events are typically dropped.
    # Set max_retries to a value less than 0 to retry
    # until all events are published. The default is 3.
    #max_retries: 3
  
    # The maximum number of events to bulk in a single Kafka request. The default
    # is 2048.
    #bulk_max_size: 2048
  
    # The number of seconds to wait for responses from the Kafka brokers before
    # timing out. The default is 30s.
    #timeout: 30s
  
    # The maximum duration a broker will wait for number of required ACKs. The
    # default is 10s.
    #broker_timeout: 10s
  
    # The number of messages buffered for each Kafka broker. The default is 256.
    #channel_buffer_size: 256
  
    # The keep-alive period for an active network connection. If 0s, keep-alives
    # are disabled. The default is 0 seconds.
    #keep_alive: 0
  
    # Sets the output compression codec. Must be one of none, snappy and gzip. The
    # default is gzip.
    #compression: gzip
  
    # Set the compression level. Currently only gzip provides a compression level
    # between 0 and 9. The default value is chosen by the compression algorithm.
    #compression_level: 4
  
    # The maximum permitted size of JSON-encoded messages. Bigger messages will be
    # dropped. The default value is 1000000 (bytes). This value should be equal to
    # or less than the broker's message.max.bytes.
    #max_message_bytes: 1000000
  
    # The ACK reliability level required from broker. 0=no response, 1=wait for
    # local commit, -1=wait for all replicas to commit. The default is 1.  Note:
    # If set to 0, no ACKs are returned by Kafka. Messages might be lost silently
    # on error.
    #required_acks: 1
  
    # The configurable ClientID used for logging, debugging, and auditing
    # purposes.  The default is "beats".
    #client_id: beats
  
    # Enable SSL support. SSL is automatically enabled if any SSL setting is set.
    #ssl.enabled: false
  
    # Optional SSL configuration options. SSL is off by default.
    # Configure SSL verification mode. If `none` is configured, all server hosts
    # and certificates will be accepted. In this mode, SSL based connections are
    # susceptible to man-in-the-middle attacks. Use only for testing. Default is
    # `full`.
    #ssl.verification_mode: full
  
    # List of supported/valid TLS versions. By default all TLS versions 1.0 up to
    # 1.2 are enabled.
    #ssl.supported_protocols: [TLSv1.0, TLSv1.1, TLSv1.2]
  
    # List of root certificates for HTTPS server verifications.
    #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]
  
    # Certificate for SSL client authentication.
    #ssl.certificate: "/etc/pki/client/cert.pem"
  
    # Client Certificate Key
    #ssl.key: "/etc/pki/client/cert.key"
  
    # Optional passphrase for decrypting the Certificate Key.
    # It is recommended to use the provided keystore instead of entering the passphrase in plain text.
    #ssl.key_passphrase: ''
  
    # Configure cipher suites to be used for SSL connections.
    #ssl.cipher_suites: []
  
    # Configure curve types for ECDHE based cipher suites.
    #ssl.curve_types: []
  
    # Configure what types of renegotiation are supported. Valid options are
    # never, once, and freely. Default is never.
    #ssl.renegotiation: never
  
  #================================= Paths ==================================
  
  # The home path for the apm-server installation. This is the default base path
  # for all other path settings and for miscellaneous files that come with the
  # distribution.
  # If not set by a CLI flag or in the configuration file, the default for the
  # home path is the location of the binary.
  #path.home:
  
  # The configuration path for the apm-server installation. This is the default
  # base path for configuration files, including the main YAML configuration file
  # and the Elasticsearch template file. If not set by a CLI flag or in the
  # configuration file, the default for the configuration path is the home path.
  #path.config: ${path.home}
  
  # The data path for the apm-server installation. This is the default base path
  # for all the files in which apm-server needs to store its data. If not set by a
  # CLI flag or in the configuration file, the default for the data path is a data
  # subdirectory inside the home path.
  #path.data: ${path.home}/data
  
  # The logs path for an apm-server installation. If not set by a CLI flag or in the
  # configuration file, the default is a logs subdirectory inside the home path.
  #path.logs: ${path.home}/logs
  
  #================================= Logging =================================
  
  # There are three options for the log output: syslog, file, and stderr.
  # Windows systems default to file output. All other systems default to syslog.
  
  # Sets the minimum log level. The default log level is info.
  # Available log levels are: error, warning, info, or debug.
  logging.level: debug
  
  # Enable debug output for selected components. To enable all selectors use ["*"].
  # Other available selectors are "beat", "publish", or "service".
  # Multiple selectors can be chained.
  #logging.selectors: [ ]
  
  # Send all logging output to syslog. The default is false.
  #logging.to_syslog: true
  
  # If enabled, apm-server periodically logs its internal metrics that have changed
  # in the last period. For each metric that changed, the delta from the value at
  # the beginning of the period is logged. Also, the total values for
  # all non-zero internal metrics are logged on shutdown. The default is false.
  #logging.metrics.enabled: false
  
  # The period after which to log the internal metrics. The default is 30s.
  #logging.metrics.period: 30s
  
  # Logging to rotating files. When true, writes all logging output to files.
  # The log files are automatically rotated when the log file size limit is reached.
  #logging.to_files: true
  #logging.files:
    # Configure the path where the logs are written. The default is the logs directory
    # under the home path (the binary location).
    #path: /var/log/apm-server
  
    # The name of the files where the logs are written to.
    #name: apm-server
  
    # Configure log file size limit. If limit is reached, log file will be
    # automatically rotated.
    #rotateeverybytes: 10485760 # = 10MB
  
    # Number of rotated log files to keep. Oldest files will be deleted first.
    #keepfiles: 7
  
    # The permissions mask to apply when rotating log files. The default value is 0600.
    # Must be a valid Unix-style file permissions mask expressed in octal notation.
    #permissions: 0600
  
    # Enable log file rotation on time intervals in addition to size-based rotation.
    # Intervals must be at least 1s. Values of 1m, 1h, 24h, 7*24h, 30*24h, and 365*24h
    # are boundary-aligned with minutes, hours, days, weeks, months, and years as
    # reported by the local system clock. All other intervals are calculated from the
    # Unix epoch. Defaults to disabled.
    #interval: 0
  
  # Set to true to log messages in json format.
  #logging.json: false
  
  #=============================== HTTP Endpoint ===============================
  
  # apm-server can expose internal metrics through a HTTP endpoint. For security
  # reasons the endpoint is disabled by default. This feature is currently experimental.
  # Stats can be access through http://localhost:5066/stats. For pretty JSON output
  # append ?pretty to the URL.
  
  # Defines if the HTTP endpoint is enabled.
  #http.enabled: false
  
  # The HTTP endpoint will bind to this hostname or IP address. It is recommended to use only localhost.
  #http.host: localhost
  
  # Port on which the HTTP endpoint will bind. Default is 5066.
  #http.port: 5066
  
  #============================= X-pack Monitoring =============================
  
  # APM server can export internal metrics to a central Elasticsearch monitoring
  # cluster.  This requires x-pack monitoring to be enabled in Elasticsearch.  The
  # reporting is disabled by default.
  
  # Set to true to enable the monitoring reporter.
  monitoring.enabled: true
  
  # Most settings from the Elasticsearch output are accepted here as well.
  # Note that these settings should be configured to point to your Elasticsearch *monitoring* cluster.
  # Any setting that is not set is automatically inherited from the Elasticsearch
  # output configuration. This means that if you have the Elasticsearch output configured,
  # you can simply uncomment the following line.
  monitoring.elasticsearch:
  
    # Protocol - either `http` (default) or `https`.
    #protocol: "https"
  
    # Authentication credentials - either API key or username/password.
    #api_key: "id:api_key"
    #username: "elastic"
    #password: "changeme"
  
    # Array of hosts to connect to.
    # Scheme and port can be left out and will be set to the default (`http` and `9200`).
    # In case you specify and additional path, the scheme is required: `http://localhost:9200/path`.
    # IPv6 addresses should always be defined as: `https://[2001:db8::1]:9200`.
    hosts: ["${ES_NODE:elastic}"]
  
    # Set gzip compression level.
    #compression_level: 0
  
    # Dictionary of HTTP parameters to pass within the URL with index operations.
    #parameters:
      #param1: value1
      #param2: value2
  
    # Custom HTTP headers to add to each request.
    #headers:
    #  X-My-Header: Contents of the header
  
    # Proxy server url.
    #proxy_url: http://proxy:3128
  
    # The number of times a particular Elasticsearch index operation is attempted. If
    # the indexing operation doesn't succeed after this many retries, the events are
    # dropped. The default is 3.
    #max_retries: 3
  
    # The maximum number of events to bulk in a single Elasticsearch bulk API index request.
    # The default is 50.
    #bulk_max_size: 50
  
    # The number of seconds to wait before trying to reconnect to Elasticsearch
    # after a network error. After waiting backoff.init seconds, apm-server
    # tries to reconnect. If the attempt fails, the backoff timer is increased
    # exponentially up to backoff.max. After a successful connection, the backoff
    # timer is reset. The default is 1s.
    #backoff.init: 1s
  
    # The maximum number of seconds to wait before attempting to connect to
    # Elasticsearch after a network error. The default is 60s.
    #backoff.max: 60s
  
    # Configure HTTP request timeout before failing an request to Elasticsearch.
    #timeout: 90
  
    # Enable custom SSL settings. Set to false to ignore custom SSL settings for secure communication.
    #ssl.enabled: true
  
    # Optional SSL configuration options. SSL is off by default, change the `protocol` option if you want to enable `https`.
    # Configure SSL verification mode. If `none` is configured, all server hosts
    # and certificates will be accepted. In this mode, SSL based connections are
    # susceptible to man-in-the-middle attacks. Use only for testing. Default is
    # `full`.
    #ssl.verification_mode: full
  
    # List of supported/valid TLS versions. By default all TLS versions 1.0 up to
    # 1.2 are enabled.
    #ssl.supported_protocols: [TLSv1.0, TLSv1.1, TLSv1.2]
  
    # List of root certificates for HTTPS server verifications.
    #ssl.certificate_authorities: ["/etc/pki/root/ca.pem"]
  
    # Certificate for SSL client authentication.
    #ssl.certificate: "/etc/pki/client/cert.pem"
  
    # Client Certificate Key
    #ssl.key: "/etc/pki/client/cert.key"
  
    # Optional passphrase for decrypting the Certificate Key.
    # It is recommended to use the provided keystore instead of entering the passphrase in plain text.
    #ssl.key_passphrase: ''
  
    # Configure cipher suites to be used for SSL connections.
    #ssl.cipher_suites: []
  
    # Configure curve types for ECDHE based cipher suites.
    #ssl.curve_types: []
  
    # Configure what types of renegotiation are supported. Valid options are
    # never, once, and freely. Default is never.
    #ssl.renegotiation: never
  
    #metrics.period: 10s
    #state.period: 1m